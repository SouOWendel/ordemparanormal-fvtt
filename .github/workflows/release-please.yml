on:
    push:
        branches:
            - main

permissions:
    contents: write
    pull-requests: write

name: release-please

jobs:
    release-please:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            # Set up our some variables for future use
            # Adapted from https://github.community/t/how-to-get-just-the-tag-name/16241/7
            # and https://github.com/foundryvtt/dnd5e/blob/master/.github/workflows/release.yml
            # Tag name: ${{ steps.get_vars.outputs.TAG_NAME }}
            # Expected Release system.json URL: ${{ steps.get_vars.outputs.RELEASE_INSTALL_URL }}
            # Stringified system.json contents: ${{ steps.get_vars.outputs.SYSTEM_JSON }}
            - name: Set Up Variables
              id: get_vars
              run: |
                TAG=${GITHUB_REF/refs\/tags\//}
                echo "TAG_NAME=$TAG" >> $GITHUB_OUTPUT
                echo "ZIP_NAME=$TAG.zip" >> $GITHUB_OUTPUT
                echo "RELEASE_DOWNLOAD_URL=https://github.com/${{github.repository}}/releases/download/$TAG/$TAG.zip" >> $GITHUB_OUTPUT
                echo "RELEASE_INSTALL_URL=https://github.com/${{github.repository}}/releases/download/$TAG/system.json" >> $GITHUB_OUTPUT
                JSON=$(cat ./system.json)
                JSON2=${JSON//'%'/'%25'}
                echo "SYSTEM_JSON=$(JSON2)" >> $GITHUB_OUTPUT

            - name: Verify correct naming
              env:
                TAG_NAME: ${{ steps.get_vars.outputs.TAG_NAME }}
                RELEASE_DOWNLOAD: ${{steps.get_vars.outputs.RELEASE_DOWNLOAD_URL}}
                # Extract version and download url from system.json
                # https://docs.github.com/en/actions/learn-github-actions/expressions#fromjson
                PACKAGE_VERSION: ${{fromJSON(steps.get_vars.outputs.SYSTEM_JSON).version}}
                # PACKAGE_DOWNLOAD: ${{fromJSON(steps.get_vars.outputs.SYSTEM_JSON).download}}
              run: |
                # Validate that the tag being released matches the package version.
                if [[ ! $TAG_NAME == $PACKAGE_VERSION ]]; then
                    echo "The system.json version does not match tag name."
                    echo "system.json: $PACKAGE_VERSION"
                    echo "tag name: $TAG_NAME"
                    echo "Please fix this and push the tag again."
                    exit 1
                fi


            - name: Update Release with Files
              id: create_version_release
              uses: ncipollo/release-action@v1
              with:
                allowUpdates: true # Set this to false if you want to prevent updating existing releases
                name: ${{steps.get_vars.outputs.TAG_NAME}}
                draft: false
                token: ${{ secrets.GITHUB_TOKEN }}
                artifacts: './system.json'
                tag: ${{steps.get_vars.outputs.TAG_NAME}}
                prerelease: false
                body: '**Installation:** To manually install this release, please use the following manifest URL: ${{steps.get_vars.outputs.RELEASE_INSTALL_URL}}'
